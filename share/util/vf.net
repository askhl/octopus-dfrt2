//
// time: Wed Nov 30 16:24:17 2005
//
// version: 3.2.0 (format), 4.3.2 (DX)
//
//
//
// macro reference (indirect): CPK /usr/local/CMSP/macros/CPK.net
//
// macro reference (direct): BallsAndSticks /usr/local/CMSP/macros/BallsAndSticks.net
include "BallsAndSticks.net"
//
// MODULE main
//
// comment: mf.net OpenDX network
// comment: =====================
// comment: 
// comment: This OpenDX network visualizes a given function output
// comment: by octopus or any of its auxiliary programs.
// comment: 
// comment: =====================
// comment: 
// comment: In this comment we give some short instructions to the
// comment: usage of the OpenDX network "mf.net".
// comment: 
// comment: One prerrequisite you should have for the usage of it
// comment: is knowledge of OpenDX at "user" level. For this purpose
// comment: you only have to follow the Tutorial I of OpenDX. No
// comment: "devoloper" knowledge of OpenDX is necessary (that is,
// comment: you do not need how to build networks). Tutorial I will
// comment: show you the basics -- manipulating the image, rotating it,
// comment: etc.
// comment: 
// comment: =====================
// comment: 
// comment: 0. Make a copy of "mf.net" and "mf.cfg" in the directory
// comment: you want to work in (this is not strictly necessary, but
// comment: will permit you to overwrite the program if you wish).
// comment: 
// comment: 1. Run OpenDX:
// comment: 
// comment: prompt > dx
// comment: 
// comment: The main DataExplorer window is displayed.
// comment: 
// comment: 2. In the main DataExplorer window, select "Run Visual
// comment: Programs", and then choose "mf.net". At least two
// comment: windows open, one of them called something like
// comment: "Data Explorer: /whatever_path/mf.net", and the other one
// comment: called "Control Panel".
// comment: 
// comment: 3. This comment may be accessed from the main window,
// comment: selecting [Help => Application Comment]. So if you
// comment: are reading this, you probably have done all the
// comment: previous steps.
// comment: 
// comment: 4. The first step is selecting the function that is
// comment: going to be plotted. The selector for the function is
// comment: the first item in the Control Panel: "Select the
// comment: function to plot", which initially is set to null.
// comment: You may select any of *.dx files built by octopus.
// comment: 
// comment: 5. Once the function is specified, it will be imported
// comment: by DX. Nothing will be plotted yet. However, a file
// comment: called "dxstat.filename" will be written, with some
// comment: information about the file.
// comment: 
// comment: 6. The second step should be specifying any operation
// comment: that you may want to perform on the function before
// comment: plotting. That may be done in the second item of the
// comment: Control Panel, "Expression". There you may, for example,
// comment: calculate the logarithm of the square of the function,
// comment: by setting it to: "log10(a*a+1e-10)". You may
// comment: also leave the function as it is, by just setting "a".
// comment: (The letter "a" stands for the imported function)
// comment: 
// comment: 7. The next section of the control panel permits the
// comment: visualization of a isosurface of the function. For that
// comment: purpose you have to activate it by clicking on
// comment: the "Show isosurface" toggle. An image window will
// comment: show up with the isosurface. You may manipulate it
// comment: as you wish, by making use of the "Options" menu of
// comment: the "Isosurface" image window.
// comment: 
// comment: 8. The Control Panel allows to change the way in which
// comment: the isosurface is plotted. For example, you may change
// comment: the value of the isosurface ("Isosurface value"), the
// comment: color, and the opacity of the color. You may also
// comment: set the color by mapping another function, by
// comment: toggling on the "Map isosurface" option. In that case,
// comment: a new menu will show up, "Mapping function". There you
// comment: may select the function to be mapped (for example, 
// comment: mapping the potential on one density isosurface). You
// comment: may control the colouring by activating a colormap
// comment: ("Mapping function colormap"). You may also show one
// comment: colorbar on the graph to map the values of the mapped
// comment: function with the colors.
// comment: 
// comment: 9. Then you may also visualize a color map of some slab
// comment: of the function, by activating the "Show slab" toggle.
// comment: You will see a new image window, "Slab", popping up.
// comment: This slab will also be shown on the isosurface window,
// comment: if it is active, so that you may see how the slab is placed
// comment: in the 3D world. To control the colors of the slab, you may
// comment: activate one colormap control by toggling on the
// comment: "Show slab colormap" control. On the slab you may depict
// comment: some contour plots, by setting the "Number of contour
// comment: plots" to a non null number. By default the plane of the
// comment: slab will be the "z=0" plane. This can be changed by
// comment: changing the "Slab dimension" menu.
// comment: 
// comment: 10. A balls and sticks model of the geometruy of the 
// comment: molecule can be shown by specifying a "pdb" file on the
// comment: lower part of the Control Panel, in the file selector
// comment: "Select the file with the geometry". You also have to
// comment: toggle on the "Show geometry" selector. Some control
// comment: on the appearance of the model can be gained by toggling
// comment: on the "Details..." selector. 
// page assignment: Geometry	order=4, windowed=0, showing=0
// page assignment: Image	order=8, windowed=0, showing=0
// page assignment: Import	order=2, windowed=0, showing=1
// page assignment: Statistics	order=3, windowed=0, showing=0
// page assignment: Vector field	order=6, windowed=0, showing=0
// page assignment: Vector slab	order=7, windowed=0, showing=0
// page assignment: slab	order=5, windowed=0, showing=0
// workspace: width = 636, height = 692
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node Toggle[4]: x = 44, y = 14, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_4"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Geometry
    // toggle : 0
    //
    // 
    // node FileSelector[2]: x = 167, y = 17, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: Geometry
    //
    // 
    // node Route[6]: x = 112, y = 101, inputs = 2, outputs = 2, label = Route
    // page group: Geometry
    //
main_Route_6_out_1,
main_Route_6_out_2 = 
    Route(
    main_Toggle_4_out_1,
    main_FileSelector_2_out_1
    ) [instance: 6, cache: 1];
    // 
    // node ImportStructure[1]: x = 77, y = 188, inputs = 2, label = ImportStructure
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "xyz"
    // page group: Geometry
    //
main_ImportStructure_1_out_1 = 
    ImportStructure(
    main_Route_6_out_1,
    main_ImportStructure_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[36]: x = 120, y = 264, inputs = 1, label = geo
    // page group: Geometry
    //
geo = main_ImportStructure_1_out_1;
    // 
    // node Receiver[35]: x = 376, y = 22, inputs = 1, label = geo
    // page group: Geometry
    //
main_Receiver_35_out_1[cache: 0] = geo;
    // 
    // node String[4]: x = 494, y = 34, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "default"
    // page group: Geometry
    //
    // 
    // node AddRadii[1]: x = 375, y = 103, inputs = 2, label = AddRadii
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "default"
    // page group: Geometry
    //
main_AddRadii_1_out_1 = 
    AddRadii(
    main_Receiver_35_out_1,
    main_String_4_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[4]: x = 494, y = 109, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_4"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = -1.1 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -5.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 5.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = -1.1 
    // page group: Geometry
    //
    // 
    // node AddBonds[1]: x = 383, y = 185, inputs = 2, label = AddBonds
    // page group: Geometry
    //
main_AddBonds_1_out_1 = 
    AddBonds(
    main_AddRadii_1_out_1,
    main_Scalar_4_out_1
    ) [instance: 1, cache: 1];
    // 
    // node String[3]: x = 497, y = 194, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "default"
    // page group: Geometry
    //
    // 
    // node AddColors[1]: x = 370, y = 279, inputs = 2, label = AddColors
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "default"
    // page group: Geometry
    //
main_AddColors_1_out_1 = 
    AddColors(
    main_AddBonds_1_out_1,
    main_String_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[22]: x = 10, y = 10, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_22"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Vector field
    // toggle : 0
    //
    // 
    // node FileSelector[20]: x = 17, y = 0, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: Import
    //
    // 
    // node Inquire[17]: x = 7, y = 100, inputs = 3, label = Inquire
    // page group: Import
    //
main_Inquire_17_out_1 = 
    Inquire(
    main_FileSelector_20_out_1,
    main_Inquire_17_in_2,
    main_Inquire_17_in_3
    ) [instance: 17, cache: 1];
    // 
    // node Compute[86]: x = 9, y = 179, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: Import
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_86_out_1 = 
    Compute(
    main_Compute_86_in_1,
    main_Inquire_17_out_1
    ) [instance: 86, cache: 1];
    // 
    // node Route[26]: x = 47, y = 264, inputs = 2, outputs = 2, label = Route
    // page group: Import
    //
main_Route_26_out_1,
main_Route_26_out_2 = 
    Route(
    main_Compute_86_out_1,
    main_FileSelector_20_out_1
    ) [instance: 26, cache: 1];
    // 
    // node Import[17]: x = 47, y = 351, inputs = 6, label = Import
    // input[1]: defaulting = 1, visible = 1, type = 32, value = "test/current-1-1.dx"
    // input[2]: defaulting = 1, visible = 1, type = 32, value = NULL
    // page group: Import
    //
main_Import_17_out_1[cache: 0] = 
    Import(
    main_Route_26_out_1,
    main_Import_17_in_2,
    main_Import_17_in_3,
    main_Import_17_in_4,
    main_Import_17_in_5,
    main_Import_17_in_6
    ) [instance: 17, cache: 1];
    // 
    // node FileSelector[21]: x = 165, y = 4, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: Import
    //
    // 
    // node Inquire[18]: x = 152, y = 99, inputs = 3, label = Inquire
    // page group: Import
    //
main_Inquire_18_out_1 = 
    Inquire(
    main_FileSelector_21_out_1,
    main_Inquire_18_in_2,
    main_Inquire_18_in_3
    ) [instance: 18, cache: 1];
    // 
    // node Compute[87]: x = 154, y = 179, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: Import
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_87_out_1 = 
    Compute(
    main_Compute_87_in_1,
    main_Inquire_18_out_1
    ) [instance: 87, cache: 1];
    // 
    // node Route[27]: x = 193, y = 261, inputs = 2, outputs = 2, label = Route
    // page group: Import
    //
main_Route_27_out_1,
main_Route_27_out_2 = 
    Route(
    main_Compute_87_out_1,
    main_FileSelector_21_out_1
    ) [instance: 27, cache: 1];
    // 
    // node Import[18]: x = 193, y = 347, inputs = 6, label = Import
    // input[1]: defaulting = 1, visible = 1, type = 32, value = "test/current-2-1.dx"
    // page group: Import
    //
main_Import_18_out_1[cache: 0] = 
    Import(
    main_Route_27_out_1,
    main_Import_18_in_2,
    main_Import_18_in_3,
    main_Import_18_in_4,
    main_Import_18_in_5,
    main_Import_18_in_6
    ) [instance: 18, cache: 1];
    // 
    // node FileSelector[22]: x = 316, y = 4, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = NULL
    // output[2]: visible = 1, type = 32, value = NULL
    // page group: Import
    //
    // 
    // node Inquire[19]: x = 310, y = 95, inputs = 3, label = Inquire
    // page group: Import
    //
main_Inquire_19_out_1 = 
    Inquire(
    main_FileSelector_22_out_1,
    main_Inquire_19_in_2,
    main_Inquire_19_in_3
    ) [instance: 19, cache: 1];
    // 
    // node Compute[88]: x = 312, y = 176, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0==1?0:1"
    // page group: Import
    // expression: value = a==1?0:1
    // name[2]: value = a
    //
main_Compute_88_out_1 = 
    Compute(
    main_Compute_88_in_1,
    main_Inquire_19_out_1
    ) [instance: 88, cache: 1];
    // 
    // node Route[28]: x = 351, y = 259, inputs = 2, outputs = 2, label = Route
    // page group: Import
    //
main_Route_28_out_1,
main_Route_28_out_2 = 
    Route(
    main_Compute_88_out_1,
    main_FileSelector_22_out_1
    ) [instance: 28, cache: 1];
    // 
    // node Import[19]: x = 351, y = 346, inputs = 6, label = Import
    // input[1]: defaulting = 1, visible = 1, type = 32, value = "test/current-3-1.dx"
    // page group: Import
    //
main_Import_19_out_1[cache: 0] = 
    Import(
    main_Route_28_out_1,
    main_Import_19_in_2,
    main_Import_19_in_3,
    main_Import_19_in_4,
    main_Import_19_in_5,
    main_Import_19_in_6
    ) [instance: 19, cache: 1];
    // 
    // node Compute[70]: x = 193, y = 448, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0, $1, $2]"
    // page group: Import
    // expression: value = [a, b, c]
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
main_Compute_70_out_1 = 
    Compute(
    main_Compute_70_in_1,
    main_Import_17_out_1,
    main_Import_18_out_1,
    main_Import_19_out_1
    ) [instance: 70, cache: 1];
    // 
    // node Include[2]: x = 162, y = 541, inputs = 6, label = Include
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [-1.0e-16, -1.0e-16, -1.0e-16]
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [1.0e-16, 1.0e-16, 1.0e-16]
    // input[4]: defaulting = 0, visible = 1, type = 3, value = 1
    // input[5]: defaulting = 0, visible = 1, type = 3, value = 0
    // page group: Import
    //
main_Include_2_out_1 = 
    Include(
    main_Compute_70_out_1,
    main_Include_2_in_2,
    main_Include_2_in_3,
    main_Include_2_in_4,
    main_Include_2_in_5,
    main_Include_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[50]: x = 194, y = 630, inputs = 1, label = vector_field
    // page group: Import
    //
vector_field = main_Include_2_out_1;
    // 
    // node Receiver[80]: x = 78, y = 10, inputs = 1, label = vector_field
    // page group: Vector field
    //
main_Receiver_80_out_1[cache: 0] = vector_field;
    // 
    // node Route[24]: x = 50, y = 99, inputs = 2, outputs = 2, label = Route
    // page group: Vector field
    //
main_Route_24_out_1,
main_Route_24_out_2 = 
    Route(
    main_Toggle_22_out_1,
    main_Receiver_80_out_1
    ) [instance: 24, cache: 1];
    // 
    // node Scalar[27]: x = 131, y = 101, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_27"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 1
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: Vector field
    //
    // 
    // node Reduce[3]: x = 80, y = 198, inputs = 2, label = Reduce
    // page group: Vector field
    //
main_Reduce_3_out_1 = 
    Reduce(
    main_Route_24_out_1,
    main_Scalar_27_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Selector[5]: x = 228, y = 188, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_5"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "standard" 
    // input[3]: defaulting = 0, visible = 0, type = 32, value = "standard" 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "speedy" "spiffy" "standard" "text" "colored text" "cube" "square" "arrow2D" "circle" "diamond" "needle" "needle2D" "rocket" "rocket2D" "sphere" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0, 1, 2 }
    // output[1]: visible = 1, type = 32, value = "standard" 
    // output[2]: visible = 1, type = 32, value = "standard" 
    // page group: Vector field
    //
    // 
    // node Scalar[16]: x = 295, y = 188, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_16"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.1 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.1
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 1
    // output[1]: visible = 1, type = 5, value = 0.1 
    // page group: Vector field
    //
    // 
    // node Scalar[17]: x = 398, y = 187, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_17"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.5
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 1
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: Vector field
    //
    // 
    // node Scalar[15]: x = 346, y = 187, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_15"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.0 
    // page group: Vector field
    //
    // 
    // node Receiver[89]: x = 284, y = 0, inputs = 1, label = vector_field
    // page group: Statistics
    //
main_Receiver_89_out_1[cache: 0] = vector_field;
    // 
    // node Statistics[1]: x = 404, y = 122, inputs = 1, label = Statistics
    // page group: Statistics
    //
main_Statistics_1_out_1,
main_Statistics_1_out_2,
main_Statistics_1_out_3,
main_Statistics_1_out_4,
main_Statistics_1_out_5 = 
    Statistics(
    main_Receiver_89_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[62]: x = 460, y = 233, inputs = 1, label = min
    // page group: Statistics
    //
min = main_Statistics_1_out_4;
    // 
    // node Receiver[95]: x = 462, y = 189, inputs = 1, label = min
    // page group: Vector field
    //
main_Receiver_95_out_1[cache: 0] = min;
    // 
    // node Transmitter[61]: x = 496, y = 234, inputs = 1, label = max
    // page group: Statistics
    //
max = main_Statistics_1_out_5;
    // 
    // node Receiver[93]: x = 495, y = 187, inputs = 1, label = max
    // page group: Vector field
    //
main_Receiver_93_out_1[cache: 0] = max;
    // 
    // node AutoGlyph[1]: x = 134, y = 323, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "standard"
    // input[6]: defaulting = 1, visible = 1, type = 5, value = NULL
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 0.005
    // page group: Vector field
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_Reduce_3_out_1,
    main_Selector_5_out_1,
    main_Scalar_16_out_1,
    main_Scalar_17_out_1,
    main_Scalar_15_out_1,
    main_Receiver_95_out_1,
    main_Receiver_93_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[28]: x = 67, y = 301, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_28"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  1  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  2  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  1  
    // output[1]: visible = 1, type = 29, value =  1  
    // page group: Vector slab
    // toggle : 0
    //
main_Toggle_28_out_1[cache: 2] = 
    Toggle(
    main_Toggle_28_in_1,
    main_Toggle_28_in_2,
    main_Toggle_28_in_3,
    main_Toggle_28_in_4,
    main_Toggle_28_in_5,
    main_Toggle_28_in_6
    ) [instance: 28, cache: 1];
    // 
    // node Toggle[23]: x = 38, y = 186, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_23"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: slab
    // toggle : 0
    //
    // 
    // node Receiver[81]: x = 110, y = 112, inputs = 1, label = vector_field
    // page group: slab
    //
main_Receiver_81_out_1[cache: 0] = vector_field;
    // 
    // node Route[25]: x = 114, y = 257, inputs = 2, outputs = 2, label = Route
    // page group: slab
    //
main_Route_25_out_1,
main_Route_25_out_2 = 
    Route(
    main_Toggle_23_out_1,
    main_Receiver_81_out_1
    ) [instance: 25, cache: 1];
    // 
    // node Selector[4]: x = 242, y = 0, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_4"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "x" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "x" "y" "z" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "x" 
    // page group: slab
    //
    // 
    // node Compute[76]: x = 336, y = 91, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+1"
    // page group: slab
    // expression: value = a+1
    // name[2]: value = a
    //
main_Compute_76_out_1 = 
    Compute(
    main_Compute_76_in_1,
    main_Selector_4_out_1
    ) [instance: 76, cache: 1];
    // 
    // node Extract[5]: x = 188, y = 107, inputs = 2, label = Extract
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: Statistics
    //
main_Extract_5_out_1 = 
    Extract(
    main_Receiver_89_out_1,
    main_Extract_5_in_2
    ) [instance: 5, cache: 1];
    // 
    // node Inquire[16]: x = 203, y = 211, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "grid counts"
    // page group: Statistics
    //
main_Inquire_16_out_1 = 
    Inquire(
    main_Extract_5_out_1,
    main_Inquire_16_in_2,
    main_Inquire_16_in_3
    ) [instance: 16, cache: 1];
    // 
    // node Compute[73]: x = 122, y = 292, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.x"
    // page group: Statistics
    // expression: value = a.x
    // name[2]: value = a
    //
main_Compute_73_out_1 = 
    Compute(
    main_Compute_73_in_1,
    main_Inquire_16_out_1
    ) [instance: 73, cache: 1];
    // 
    // node Transmitter[55]: x = 133, y = 396, inputs = 1, label = grid_x
    // page group: Statistics
    //
grid_x = main_Compute_73_out_1;
    // 
    // node Receiver[86]: x = 445, y = 0, inputs = 1, label = grid_x
    // page group: slab
    //
main_Receiver_86_out_1[cache: 0] = grid_x;
    // 
    // node Compute[83]: x = 434, y = 83, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0-1"
    // page group: slab
    // expression: value = a-1
    // name[2]: value = a
    //
main_Compute_83_out_1 = 
    Compute(
    main_Compute_83_in_1,
    main_Receiver_86_out_1
    ) [instance: 83, cache: 1];
    // 
    // node Compute[74]: x = 205, y = 292, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // page group: Statistics
    // expression: value = a.y
    // name[2]: value = a
    //
main_Compute_74_out_1 = 
    Compute(
    main_Compute_74_in_1,
    main_Inquire_16_out_1
    ) [instance: 74, cache: 1];
    // 
    // node Transmitter[56]: x = 216, y = 394, inputs = 1, label = grid_y
    // page group: Statistics
    //
grid_y = main_Compute_74_out_1;
    // 
    // node Receiver[87]: x = 522, y = 0, inputs = 1, label = grid_y
    // page group: slab
    //
main_Receiver_87_out_1[cache: 0] = grid_y;
    // 
    // node Compute[84]: x = 511, y = 83, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0-1"
    // page group: slab
    // expression: value = a-1
    // name[2]: value = a
    //
main_Compute_84_out_1 = 
    Compute(
    main_Compute_84_in_1,
    main_Receiver_87_out_1
    ) [instance: 84, cache: 1];
    // 
    // node Compute[75]: x = 288, y = 293, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.z"
    // page group: Statistics
    // expression: value = a.z
    // name[2]: value = a
    //
main_Compute_75_out_1 = 
    Compute(
    main_Compute_75_in_1,
    main_Inquire_16_out_1
    ) [instance: 75, cache: 1];
    // 
    // node Transmitter[57]: x = 299, y = 394, inputs = 1, label = grid_z
    // page group: Statistics
    //
grid_z = main_Compute_75_out_1;
    // 
    // node Receiver[88]: x = 595, y = 0, inputs = 1, label = grid_z
    // page group: slab
    //
main_Receiver_88_out_1[cache: 0] = grid_z;
    // 
    // node Compute[85]: x = 585, y = 84, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0-1"
    // page group: slab
    // expression: value = a-1
    // name[2]: value = a
    //
main_Compute_85_out_1 = 
    Compute(
    main_Compute_85_in_1,
    main_Receiver_88_out_1
    ) [instance: 85, cache: 1];
    // 
    // node Switch[13]: x = 411, y = 196, inputs = 4, label = Switch
    // page group: slab
    //
main_Switch_13_out_1 = 
    Switch(
    main_Compute_76_out_1,
    main_Compute_83_out_1,
    main_Compute_84_out_1,
    main_Compute_85_out_1
    ) [instance: 13, cache: 1];
    // 
    // node Integer[8]: x = 399, y = 266, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_8"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 1 
    // input[5]: defaulting = 0, visible = 1, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 1, type = 1, value = 62
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 1 
    // page group: slab
    //
main_Integer_8_out_1[cache: 2] = 
    Integer(
    main_Integer_8_in_1,
    main_Integer_8_in_2,
    main_Integer_8_in_3,
    main_Integer_8_in_4,
    main_Integer_8_in_5,
    main_Switch_13_out_1,
    main_Integer_8_in_7,
    main_Integer_8_in_8,
    main_Integer_8_in_9,
    main_Integer_8_in_10,
    main_Integer_8_in_11
    ) [instance: 8, cache: 1];
    // 
    // node Integer[9]: x = 565, y = 209, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_9"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 1 
    // input[5]: defaulting = 0, visible = 1, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 1, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 1 
    // page group: slab
    //
main_Integer_9_out_1[cache: 2] = 
    Integer(
    main_Integer_9_in_1,
    main_Integer_9_in_2,
    main_Integer_9_in_3,
    main_Integer_9_in_4,
    main_Integer_9_in_5,
    main_Integer_9_in_6,
    main_Integer_9_in_7,
    main_Integer_9_in_8,
    main_Integer_9_in_9,
    main_Integer_9_in_10,
    main_Integer_9_in_11
    ) [instance: 9, cache: 1];
    // 
    // node Compute[82]: x = 567, y = 286, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0-1"
    // page group: slab
    // expression: value = a-1
    // name[2]: value = a
    //
main_Compute_82_out_1 = 
    Compute(
    main_Compute_82_in_1,
    main_Integer_9_out_1
    ) [instance: 82, cache: 1];
    // 
    // node Slab[4]: x = 202, y = 397, inputs = 4, label = Slab
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 0
    // input[3]: defaulting = 1, visible = 1, type = 1, value = 27
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 1
    // page group: slab
    //
main_Slab_4_out_1 = 
    Slab(
    main_Route_25_out_1,
    main_Selector_4_out_1,
    main_Integer_8_out_1,
    main_Compute_82_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[52]: x = 210, y = 501, inputs = 1, label = vector_slab
    // page group: slab
    //
vector_slab = main_Slab_4_out_1;
    // 
    // node Receiver[90]: x = 113, y = 0, inputs = 1, label = vector_slab
    // page group: Vector slab
    //
main_Receiver_90_out_1[cache: 0] = vector_slab;
    // 
    // node Scalar[28]: x = 204, y = 0, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_28"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 1
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: Vector slab
    //
    // 
    // node Reduce[4]: x = 138, y = 90, inputs = 2, label = Reduce
    // page group: Vector slab
    //
main_Reduce_4_out_1 = 
    Reduce(
    main_Receiver_90_out_1,
    main_Scalar_28_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[60]: x = 302, y = 191, inputs = 1, label = slab_dim
    // page group: slab
    //
slab_dim = main_Compute_76_out_1;
    // 
    // node Receiver[92]: x = 199, y = 214, inputs = 1, label = slab_dim
    // page group: Vector slab
    //
main_Receiver_92_out_1[cache: 0] = slab_dim;
    // 
    // node Compute[77]: x = 291, y = 176, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*[0, 1, 1]"
    // page group: Vector slab
    // expression: value = a*[0, 1, 1]
    // name[2]: value = a
    //
main_Compute_77_out_1 = 
    Compute(
    main_Compute_77_in_1,
    main_Reduce_4_out_1
    ) [instance: 77, cache: 1];
    // 
    // node Compute[80]: x = 367, y = 176, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*[1,0,1]"
    // page group: Vector slab
    // expression: value = a*[1,0,1]
    // name[2]: value = a
    //
main_Compute_80_out_1 = 
    Compute(
    main_Compute_80_in_1,
    main_Reduce_4_out_1
    ) [instance: 80, cache: 1];
    // 
    // node Compute[81]: x = 445, y = 176, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*[1,1,0]"
    // page group: Vector slab
    // expression: value = a*[1,1,0]
    // name[2]: value = a
    //
main_Compute_81_out_1 = 
    Compute(
    main_Compute_81_in_1,
    main_Reduce_4_out_1
    ) [instance: 81, cache: 1];
    // 
    // node Switch[15]: x = 341, y = 301, inputs = 4, label = Switch
    // page group: Vector slab
    //
main_Switch_15_out_1 = 
    Switch(
    main_Receiver_92_out_1,
    main_Compute_77_out_1,
    main_Compute_80_out_1,
    main_Compute_81_out_1
    ) [instance: 15, cache: 1];
    // 
    // node Switch[16]: x = 108, y = 376, inputs = 3, label = Switch
    // page group: Vector slab
    //
main_Switch_16_out_1 = 
    Switch(
    main_Toggle_28_out_1,
    main_Reduce_4_out_1,
    main_Switch_15_out_1
    ) [instance: 16, cache: 1];
    // 
    // node Selector[7]: x = 220, y = 458, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_7"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "standard" 
    // input[3]: defaulting = 0, visible = 0, type = 32, value = "standard" 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "speedy" "spiffy" "standard" "text" "colored text" "cube" "square" "arrow2D" "circle" "diamond" "needle" "needle2D" "rocket" "rocket2D" "sphere" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0, 1, 2 }
    // output[1]: visible = 1, type = 32, value = "standard" 
    // output[2]: visible = 1, type = 32, value = "standard" 
    // page group: Vector slab
    //
    // 
    // node Scalar[29]: x = 287, y = 458, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_29"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.1 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.1
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 1
    // output[1]: visible = 1, type = 5, value = 0.1 
    // page group: Vector slab
    //
    // 
    // node Scalar[30]: x = 390, y = 457, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_30"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.5
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 1
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: Vector slab
    //
    // 
    // node Scalar[31]: x = 338, y = 457, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_31"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.0 
    // page group: Vector slab
    //
    // 
    // node Receiver[96]: x = 465, y = 457, inputs = 1, label = min
    // page group: Vector slab
    //
main_Receiver_96_out_1[cache: 0] = min;
    // 
    // node Receiver[94]: x = 499, y = 456, inputs = 1, label = max
    // page group: Vector slab
    //
main_Receiver_94_out_1[cache: 0] = max;
    // 
    // node AutoGlyph[3]: x = 162, y = 593, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "standard"
    // input[6]: defaulting = 1, visible = 1, type = 5, value = NULL
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 0.005
    // page group: Vector slab
    //
main_AutoGlyph_3_out_1 = 
    AutoGlyph(
    main_Switch_16_out_1,
    main_Selector_7_out_1,
    main_Scalar_29_out_1,
    main_Scalar_30_out_1,
    main_Scalar_31_out_1,
    main_Receiver_96_out_1,
    main_Receiver_94_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Scalar[5]: x = 477, y = 282, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.18 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.18 
    // page group: Geometry
    //
    // 
    // node Integer[3]: x = 553, y = 283, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_3"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 20 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 50
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 20 
    // page group: Geometry
    //
    // 
    // node String[5]: x = 628, y = 282, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = NULL
    // page group: Geometry
    //
    // 
    // node Scalar[6]: x = 696, y = 282, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_6"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.19 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 0.5
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.19 
    // page group: Geometry
    //
    // 
    // node Integer[4]: x = 766, y = 283, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_4"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 20 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 3
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 50
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 20 
    // page group: Geometry
    //
    // 
    // node BallsAndSticks[1]: x = 479, y = 378, inputs = 8, label = BallsAndSticks
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 1
    // input[3]: defaulting = 1, visible = 1, type = 5, value = 0.2
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 8
    // input[5]: defaulting = 1, visible = 1, type = 32, value = "grey"
    // input[6]: defaulting = 0, visible = 1, type = 1, value = 2
    // input[7]: defaulting = 1, visible = 1, type = 16777245, value = {0.2}
    // input[8]: defaulting = 1, visible = 1, type = 1, value = 50
    // page group: Geometry
    //
main_BallsAndSticks_1_out_1 = 
    BallsAndSticks(
    main_AddColors_1_out_1,
    main_BallsAndSticks_1_in_2,
    main_Scalar_5_out_1,
    main_Integer_3_out_1,
    main_String_5_out_1,
    main_BallsAndSticks_1_in_6,
    main_Scalar_6_out_1,
    main_Integer_4_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[22]: x = 542, y = 451, inputs = 1, label = geometry
    // page group: Geometry
    //
geometry = main_BallsAndSticks_1_out_1;
    // 
    // node Receiver[29]: x = 214, y = 0, inputs = 1, label = geometry
    // page group: Image
    //
main_Receiver_29_out_1[cache: 0] = geometry;
    // 
    // node String[10]: x = 322, y = 356, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "cyan"
    // page group: Vector field
    //
    // 
    // node Scalar[18]: x = 375, y = 357, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_18"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.05 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.05 
    // page group: Vector field
    //
    // 
    // node Color[47]: x = 182, y = 448, inputs = 5, label = Color
    // input[4]: defaulting = 1, visible = 0, type = 32, value = NULL
    // input[5]: defaulting = 1, visible = 0, type = 3, value = NULL
    // page group: Vector field
    //
main_Color_47_out_1 = 
    Color(
    main_AutoGlyph_1_out_1,
    main_String_10_out_1,
    main_Scalar_18_out_1,
    main_Color_47_in_4,
    main_Color_47_in_5
    ) [instance: 47, cache: 1];
    // 
    // node Transmitter[49]: x = 172, y = 523, inputs = 1, label = vector_image
    // page group: Vector field
    //
vector_image = main_Color_47_out_1;
    // 
    // node Receiver[79]: x = 293, y = 0, inputs = 1, label = vector_image
    // page group: Image
    //
main_Receiver_79_out_1[cache: 0] = vector_image;
    // 
    // node String[13]: x = 338, y = 625, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "red"
    // page group: Vector slab
    //
    // 
    // node Scalar[32]: x = 389, y = 625, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_32"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: Vector slab
    //
    // 
    // node Color[48]: x = 229, y = 710, inputs = 5, label = Color
    // page group: Vector slab
    //
main_Color_48_out_1 = 
    Color(
    main_AutoGlyph_3_out_1,
    main_String_13_out_1,
    main_Scalar_32_out_1,
    main_Color_48_in_4,
    main_Color_48_in_5
    ) [instance: 48, cache: 1];
    // 
    // node Transmitter[59]: x = 226, y = 797, inputs = 1, label = slab_image
    // page group: Vector slab
    //
slab_image = main_Color_48_out_1;
    // 
    // node Receiver[82]: x = 395, y = 0, inputs = 1, label = slab_image
    // page group: Image
    //
main_Receiver_82_out_1[cache: 0] = slab_image;
    // 
    // node Collect[4]: x = 303, y = 97, inputs = 3, label = Collect
    // page group: Image
    //
main_Collect_4_out_1 = 
    Collect(
    main_Receiver_29_out_1,
    main_Receiver_79_out_1,
    main_Receiver_82_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Image[2]: x = 303, y = 204, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [2.07433 0.250004 -0.5]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-0.0228147 0.861735 -41.9312]
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 22.2337
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 641
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.74961
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.960207 0.275716 -0.0445324]
    // input[11]: defaulting = 0, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[22]: defaulting = 0, visible = 0, type = 32, value = "black"
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "dens.tiff"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff"
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // page group: Image
    // depth: value = 24
    // window: position = (0.3584,0.0000), size = 0.6396x0.6836
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_Collect_4_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48,
    main_Image_2_in_49
    ) [instance: 2, cache: 1];
    // 
    // node Toggle[5]: x = 195, y = 386, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_5"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Geometry
    // toggle : 0
    //
    // 
    // node ManageControlPanel[1]: x = 107, y = 459, inputs = 2, label = ManageControlPanel
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Geometry"}
    // page group: Geometry
    //
    ManageControlPanel(
    main_ManageControlPanel_1_in_1,
    main_Toggle_5_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[24]: x = 449, y = 0, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_24"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Vector field
    // toggle : 0
    //
    // 
    // node ManageControlPanel[2]: x = 362, y = 69, inputs = 2, label = ManageControlPanel
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Vector field"}
    // page group: Vector field
    //
    ManageControlPanel(
    main_ManageControlPanel_2_in_1,
    main_Toggle_24_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Toggle[25]: x = 524, y = 24, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_25"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Import
    // toggle : 0
    //
    // 
    // node ManageControlPanel[3]: x = 483, y = 120, inputs = 2, label = ManageControlPanel
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Import"}
    // page group: Import
    //
    ManageControlPanel(
    main_ManageControlPanel_3_in_1,
    main_Toggle_25_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Toggle[29]: x = 621, y = 149, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_29"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Vector slab
    // toggle : 0
    //
    // 
    // node ManageControlPanel[5]: x = 575, y = 227, inputs = 2, label = ManageControlPanel
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Slab"}
    // page group: Vector slab
    //
    ManageControlPanel(
    main_ManageControlPanel_5_in_1,
    main_Toggle_29_out_1
    ) [instance: 5, cache: 1];
// network: end of macro body
CacheScene(main_Image_2_in_1, main_Image_2_out_1, main_Image_2_out_2);
}
main_Toggle_4_in_1 = "Toggle_4";
main_Toggle_4_in_2 = 0;
main_Toggle_4_in_3 = 0;
main_Toggle_4_in_4 = NULL;
main_Toggle_4_in_5 = NULL;
main_Toggle_4_in_6 = NULL;
main_Toggle_4_out_1 = 0;
main_FileSelector_2_out_1 = NULL;
main_Route_6_out_1 = NULL;
main_ImportStructure_1_in_2 = "xyz";
main_ImportStructure_1_out_1 = NULL;
main_Transmitter_36_out_1 = NULL;
main_Receiver_35_out_1 = NULL;
main_String_4_out_1 = "default";
main_AddRadii_1_out_1 = NULL;
main_Scalar_4_in_1 = "Scalar_4";
main_Scalar_4_in_2 = NULL;
main_Scalar_4_in_3 = -1.1 ;
main_Scalar_4_in_4 = NULL;
main_Scalar_4_in_5 = NULL;
main_Scalar_4_in_6 = NULL;
main_Scalar_4_in_7 = NULL;
main_Scalar_4_in_8 = NULL;
main_Scalar_4_in_9 = NULL;
main_Scalar_4_in_10 = NULL;
main_Scalar_4_in_11 = NULL;
main_Scalar_4_out_1 = -1.1 ;
main_AddBonds_1_out_1 = NULL;
main_String_3_out_1 = "default";
main_AddColors_1_out_1 = NULL;
main_Toggle_22_in_1 = "Toggle_22";
main_Toggle_22_in_2 = 0;
main_Toggle_22_in_3 = 0;
main_Toggle_22_in_4 = NULL;
main_Toggle_22_in_5 = NULL;
main_Toggle_22_in_6 = NULL;
main_Toggle_22_out_1 = 0;
main_FileSelector_20_out_1 = NULL;
main_Inquire_17_in_2 = NULL;
main_Inquire_17_in_3 = NULL;
main_Inquire_17_out_1 = NULL;
main_Compute_86_in_1 = "$0==1?0:1";
main_Compute_86_out_1 = NULL;
main_Route_26_out_1 = NULL;
main_Import_17_in_2 = NULL;
main_Import_17_in_3 = NULL;
main_Import_17_in_4 = NULL;
main_Import_17_in_5 = NULL;
main_Import_17_in_6 = NULL;
main_Import_17_out_1 = NULL;
main_FileSelector_21_out_1 = NULL;
main_Inquire_18_in_2 = NULL;
main_Inquire_18_in_3 = NULL;
main_Inquire_18_out_1 = NULL;
main_Compute_87_in_1 = "$0==1?0:1";
main_Compute_87_out_1 = NULL;
main_Route_27_out_1 = NULL;
main_Import_18_in_2 = NULL;
main_Import_18_in_3 = NULL;
main_Import_18_in_4 = NULL;
main_Import_18_in_5 = NULL;
main_Import_18_in_6 = NULL;
main_Import_18_out_1 = NULL;
main_FileSelector_22_out_1 = NULL;
main_Inquire_19_in_2 = NULL;
main_Inquire_19_in_3 = NULL;
main_Inquire_19_out_1 = NULL;
main_Compute_88_in_1 = "$0==1?0:1";
main_Compute_88_out_1 = NULL;
main_Route_28_out_1 = NULL;
main_Import_19_in_2 = NULL;
main_Import_19_in_3 = NULL;
main_Import_19_in_4 = NULL;
main_Import_19_in_5 = NULL;
main_Import_19_in_6 = NULL;
main_Import_19_out_1 = NULL;
main_Compute_70_in_1 = "[$0, $1, $2]";
main_Compute_70_out_1 = NULL;
main_Include_2_in_2 = [-1.0e-16, -1.0e-16, -1.0e-16];
main_Include_2_in_3 = [1.0e-16, 1.0e-16, 1.0e-16];
main_Include_2_in_4 = 1;
main_Include_2_in_5 = 0;
main_Include_2_in_6 = NULL;
main_Include_2_out_1 = NULL;
main_Transmitter_50_out_1 = NULL;
main_Receiver_80_out_1 = NULL;
main_Route_24_out_1 = NULL;
main_Scalar_27_in_1 = "Scalar_27";
main_Scalar_27_in_2 = NULL;
main_Scalar_27_in_3 = 1.0 ;
main_Scalar_27_in_4 = NULL;
main_Scalar_27_in_5 = NULL;
main_Scalar_27_in_6 = NULL;
main_Scalar_27_in_7 = NULL;
main_Scalar_27_in_8 = NULL;
main_Scalar_27_in_9 = NULL;
main_Scalar_27_in_10 = NULL;
main_Scalar_27_in_11 = NULL;
main_Scalar_27_out_1 = 1.0 ;
main_Reduce_3_out_1 = NULL;
main_Selector_5_in_1 = "Selector_5";
main_Selector_5_in_2 = "standard" ;
main_Selector_5_in_3 = "standard" ;
main_Selector_5_in_4 = NULL;
main_Selector_5_in_5 = NULL;
main_Selector_5_in_6 = NULL;
main_Selector_5_in_7 = NULL;
main_Selector_5_out_1 = "standard" ;
main_Scalar_16_in_1 = "Scalar_16";
main_Scalar_16_in_2 = NULL;
main_Scalar_16_in_3 = 0.1 ;
main_Scalar_16_in_4 = NULL;
main_Scalar_16_in_5 = NULL;
main_Scalar_16_in_6 = NULL;
main_Scalar_16_in_7 = NULL;
main_Scalar_16_in_8 = NULL;
main_Scalar_16_in_9 = NULL;
main_Scalar_16_in_10 = NULL;
main_Scalar_16_in_11 = NULL;
main_Scalar_16_out_1 = 0.1 ;
main_Scalar_17_in_1 = "Scalar_17";
main_Scalar_17_in_2 = NULL;
main_Scalar_17_in_3 = 1.0 ;
main_Scalar_17_in_4 = NULL;
main_Scalar_17_in_5 = NULL;
main_Scalar_17_in_6 = NULL;
main_Scalar_17_in_7 = NULL;
main_Scalar_17_in_8 = NULL;
main_Scalar_17_in_9 = NULL;
main_Scalar_17_in_10 = NULL;
main_Scalar_17_in_11 = NULL;
main_Scalar_17_out_1 = 1.0 ;
main_Scalar_15_in_1 = "Scalar_15";
main_Scalar_15_in_2 = NULL;
main_Scalar_15_in_3 = 0.0 ;
main_Scalar_15_in_4 = NULL;
main_Scalar_15_in_5 = NULL;
main_Scalar_15_in_6 = NULL;
main_Scalar_15_in_7 = NULL;
main_Scalar_15_in_8 = NULL;
main_Scalar_15_in_9 = NULL;
main_Scalar_15_in_10 = NULL;
main_Scalar_15_in_11 = NULL;
main_Scalar_15_out_1 = 0.0 ;
main_Receiver_89_out_1 = NULL;
main_Statistics_1_out_4 = NULL;
main_Statistics_1_out_5 = NULL;
main_Transmitter_62_out_1 = NULL;
main_Receiver_95_out_1 = NULL;
main_Transmitter_61_out_1 = NULL;
main_Receiver_93_out_1 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_Toggle_28_in_1 = "Toggle_28";
main_Toggle_28_in_2 =  1  ;
main_Toggle_28_in_3 = 0;
main_Toggle_28_in_4 =  2  ;
main_Toggle_28_in_5 =  1  ;
main_Toggle_28_in_6 = NULL;
main_Toggle_28_out_1 =  1  ;
main_Toggle_23_in_1 = "Toggle_23";
main_Toggle_23_in_2 = 0;
main_Toggle_23_in_3 = 0;
main_Toggle_23_in_4 = NULL;
main_Toggle_23_in_5 = NULL;
main_Toggle_23_in_6 = NULL;
main_Toggle_23_out_1 = 0;
main_Receiver_81_out_1 = NULL;
main_Route_25_out_1 = NULL;
main_Selector_4_in_1 = "Selector_4";
main_Selector_4_in_2 = "x" ;
main_Selector_4_in_3 = 0 ;
main_Selector_4_in_4 = NULL;
main_Selector_4_in_5 = NULL;
main_Selector_4_in_6 = NULL;
main_Selector_4_in_7 = NULL;
main_Selector_4_out_1 = 0 ;
main_Compute_76_in_1 = "$0+1";
main_Compute_76_out_1 = NULL;
main_Extract_5_in_2 = "positions";
main_Extract_5_out_1 = NULL;
main_Inquire_16_in_2 = "grid counts";
main_Inquire_16_in_3 = NULL;
main_Inquire_16_out_1 = NULL;
main_Compute_73_in_1 = "$0.x";
main_Compute_73_out_1 = NULL;
main_Transmitter_55_out_1 = NULL;
main_Receiver_86_out_1 = NULL;
main_Compute_83_in_1 = "$0-1";
main_Compute_83_out_1 = NULL;
main_Compute_74_in_1 = "$0.y";
main_Compute_74_out_1 = NULL;
main_Transmitter_56_out_1 = NULL;
main_Receiver_87_out_1 = NULL;
main_Compute_84_in_1 = "$0-1";
main_Compute_84_out_1 = NULL;
main_Compute_75_in_1 = "$0.z";
main_Compute_75_out_1 = NULL;
main_Transmitter_57_out_1 = NULL;
main_Receiver_88_out_1 = NULL;
main_Compute_85_in_1 = "$0-1";
main_Compute_85_out_1 = NULL;
main_Switch_13_out_1 = NULL;
main_Integer_8_in_1 = "Integer_8";
main_Integer_8_in_2 = NULL;
main_Integer_8_in_3 = 1 ;
main_Integer_8_in_4 = NULL;
main_Integer_8_in_5 = 1;
main_Integer_8_in_7 = NULL;
main_Integer_8_in_8 = NULL;
main_Integer_8_in_9 = NULL;
main_Integer_8_in_10 = NULL;
main_Integer_8_in_11 = NULL;
main_Integer_8_out_1 = 1 ;
main_Integer_9_in_1 = "Integer_9";
main_Integer_9_in_2 = NULL;
main_Integer_9_in_3 = 1 ;
main_Integer_9_in_4 = NULL;
main_Integer_9_in_5 = 1;
main_Integer_9_in_6 = NULL;
main_Integer_9_in_7 = NULL;
main_Integer_9_in_8 = NULL;
main_Integer_9_in_9 = NULL;
main_Integer_9_in_10 = NULL;
main_Integer_9_in_11 = NULL;
main_Integer_9_out_1 = 1 ;
main_Compute_82_in_1 = "$0-1";
main_Compute_82_out_1 = NULL;
main_Slab_4_out_1 = NULL;
main_Transmitter_52_out_1 = NULL;
main_Receiver_90_out_1 = NULL;
main_Scalar_28_in_1 = "Scalar_28";
main_Scalar_28_in_2 = NULL;
main_Scalar_28_in_3 = 1.0 ;
main_Scalar_28_in_4 = NULL;
main_Scalar_28_in_5 = NULL;
main_Scalar_28_in_6 = NULL;
main_Scalar_28_in_7 = NULL;
main_Scalar_28_in_8 = NULL;
main_Scalar_28_in_9 = NULL;
main_Scalar_28_in_10 = NULL;
main_Scalar_28_in_11 = NULL;
main_Scalar_28_out_1 = 1.0 ;
main_Reduce_4_out_1 = NULL;
main_Transmitter_60_out_1 = NULL;
main_Receiver_92_out_1 = NULL;
main_Compute_77_in_1 = "$0*[0, 1, 1]";
main_Compute_77_out_1 = NULL;
main_Compute_80_in_1 = "$0*[1,0,1]";
main_Compute_80_out_1 = NULL;
main_Compute_81_in_1 = "$0*[1,1,0]";
main_Compute_81_out_1 = NULL;
main_Switch_15_out_1 = NULL;
main_Switch_16_out_1 = NULL;
main_Selector_7_in_1 = "Selector_7";
main_Selector_7_in_2 = "standard" ;
main_Selector_7_in_3 = "standard" ;
main_Selector_7_in_4 = NULL;
main_Selector_7_in_5 = NULL;
main_Selector_7_in_6 = NULL;
main_Selector_7_in_7 = NULL;
main_Selector_7_out_1 = "standard" ;
main_Scalar_29_in_1 = "Scalar_29";
main_Scalar_29_in_2 = NULL;
main_Scalar_29_in_3 = 0.1 ;
main_Scalar_29_in_4 = NULL;
main_Scalar_29_in_5 = NULL;
main_Scalar_29_in_6 = NULL;
main_Scalar_29_in_7 = NULL;
main_Scalar_29_in_8 = NULL;
main_Scalar_29_in_9 = NULL;
main_Scalar_29_in_10 = NULL;
main_Scalar_29_in_11 = NULL;
main_Scalar_29_out_1 = 0.1 ;
main_Scalar_30_in_1 = "Scalar_30";
main_Scalar_30_in_2 = NULL;
main_Scalar_30_in_3 = 1.0 ;
main_Scalar_30_in_4 = NULL;
main_Scalar_30_in_5 = NULL;
main_Scalar_30_in_6 = NULL;
main_Scalar_30_in_7 = NULL;
main_Scalar_30_in_8 = NULL;
main_Scalar_30_in_9 = NULL;
main_Scalar_30_in_10 = NULL;
main_Scalar_30_in_11 = NULL;
main_Scalar_30_out_1 = 1.0 ;
main_Scalar_31_in_1 = "Scalar_31";
main_Scalar_31_in_2 = NULL;
main_Scalar_31_in_3 = 0.0 ;
main_Scalar_31_in_4 = NULL;
main_Scalar_31_in_5 = NULL;
main_Scalar_31_in_6 = NULL;
main_Scalar_31_in_7 = NULL;
main_Scalar_31_in_8 = NULL;
main_Scalar_31_in_9 = NULL;
main_Scalar_31_in_10 = NULL;
main_Scalar_31_in_11 = NULL;
main_Scalar_31_out_1 = 0.0 ;
main_Receiver_96_out_1 = NULL;
main_Receiver_94_out_1 = NULL;
main_AutoGlyph_3_out_1 = NULL;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 0.18 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_5_out_1 = 0.18 ;
main_Integer_3_in_1 = "Integer_3";
main_Integer_3_in_2 = NULL;
main_Integer_3_in_3 = 20 ;
main_Integer_3_in_4 = NULL;
main_Integer_3_in_5 = NULL;
main_Integer_3_in_6 = NULL;
main_Integer_3_in_7 = NULL;
main_Integer_3_in_8 = NULL;
main_Integer_3_in_9 = NULL;
main_Integer_3_in_10 = NULL;
main_Integer_3_in_11 = NULL;
main_Integer_3_out_1 = 20 ;
main_String_5_out_1 = NULL;
main_Scalar_6_in_1 = "Scalar_6";
main_Scalar_6_in_2 = NULL;
main_Scalar_6_in_3 = 0.19 ;
main_Scalar_6_in_4 = NULL;
main_Scalar_6_in_5 = NULL;
main_Scalar_6_in_6 = NULL;
main_Scalar_6_in_7 = NULL;
main_Scalar_6_in_8 = NULL;
main_Scalar_6_in_9 = NULL;
main_Scalar_6_in_10 = NULL;
main_Scalar_6_in_11 = NULL;
main_Scalar_6_out_1 = 0.19 ;
main_Integer_4_in_1 = "Integer_4";
main_Integer_4_in_2 = NULL;
main_Integer_4_in_3 = 20 ;
main_Integer_4_in_4 = NULL;
main_Integer_4_in_5 = NULL;
main_Integer_4_in_6 = NULL;
main_Integer_4_in_7 = NULL;
main_Integer_4_in_8 = NULL;
main_Integer_4_in_9 = NULL;
main_Integer_4_in_10 = NULL;
main_Integer_4_in_11 = NULL;
main_Integer_4_out_1 = 20 ;
main_BallsAndSticks_1_in_2 = 1;
main_BallsAndSticks_1_in_6 = 2;
main_BallsAndSticks_1_out_1 = NULL;
main_Transmitter_22_out_1 = NULL;
main_Receiver_29_out_1 = NULL;
main_String_10_out_1 = "cyan";
main_Scalar_18_in_1 = "Scalar_18";
main_Scalar_18_in_2 = NULL;
main_Scalar_18_in_3 = 0.05 ;
main_Scalar_18_in_4 = NULL;
main_Scalar_18_in_5 = NULL;
main_Scalar_18_in_6 = NULL;
main_Scalar_18_in_7 = NULL;
main_Scalar_18_in_8 = NULL;
main_Scalar_18_in_9 = NULL;
main_Scalar_18_in_10 = NULL;
main_Scalar_18_in_11 = NULL;
main_Scalar_18_out_1 = 0.05 ;
main_Color_47_in_4 = NULL;
main_Color_47_in_5 = NULL;
main_Color_47_out_1 = NULL;
main_Transmitter_49_out_1 = NULL;
main_Receiver_79_out_1 = NULL;
main_String_13_out_1 = "red";
main_Scalar_32_in_1 = "Scalar_32";
main_Scalar_32_in_2 = NULL;
main_Scalar_32_in_3 = 1.0 ;
main_Scalar_32_in_4 = NULL;
main_Scalar_32_in_5 = NULL;
main_Scalar_32_in_6 = NULL;
main_Scalar_32_in_7 = NULL;
main_Scalar_32_in_8 = NULL;
main_Scalar_32_in_9 = NULL;
main_Scalar_32_in_10 = NULL;
main_Scalar_32_in_11 = NULL;
main_Scalar_32_out_1 = 1.0 ;
main_Color_48_in_4 = NULL;
main_Color_48_in_5 = NULL;
main_Color_48_out_1 = NULL;
main_Transmitter_59_out_1 = NULL;
main_Receiver_82_out_1 = NULL;
main_Collect_4_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X24,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [2.07433 0.250004 -0.5];
main_Image_2_in_6 = [-0.0228147 0.861735 -41.9312];
main_Image_2_in_7 = NULL;
main_Image_2_in_8 = 641;
main_Image_2_in_9 = 0.74961;
main_Image_2_in_10 = [0.960207 0.275716 -0.0445324];
main_Image_2_in_11 = 30.0;
main_Image_2_in_12 = 1;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = "black";
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = "dens.tiff";
main_Image_2_in_26 = "tiff";
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = NULL;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = NULL;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = NULL;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "none";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
main_Image_2_in_49 = NULL;
main_Toggle_5_in_1 = "Toggle_5";
main_Toggle_5_in_2 = 0;
main_Toggle_5_in_3 = 0;
main_Toggle_5_in_4 = NULL;
main_Toggle_5_in_5 = NULL;
main_Toggle_5_in_6 = NULL;
main_Toggle_5_out_1 = 0;
main_ManageControlPanel_1_in_1 = {"Geometry"};
main_Toggle_24_in_1 = "Toggle_24";
main_Toggle_24_in_2 = 0;
main_Toggle_24_in_3 = 0;
main_Toggle_24_in_4 = NULL;
main_Toggle_24_in_5 = NULL;
main_Toggle_24_in_6 = NULL;
main_Toggle_24_out_1 = 0;
main_ManageControlPanel_2_in_1 = {"Vector field"};
main_Toggle_25_in_1 = "Toggle_25";
main_Toggle_25_in_2 = 0;
main_Toggle_25_in_3 = 0;
main_Toggle_25_in_4 = NULL;
main_Toggle_25_in_5 = NULL;
main_Toggle_25_in_6 = NULL;
main_Toggle_25_out_1 = 0;
main_ManageControlPanel_3_in_1 = {"Import"};
main_Toggle_29_in_1 = "Toggle_29";
main_Toggle_29_in_2 = 0;
main_Toggle_29_in_3 = 0;
main_Toggle_29_in_4 = NULL;
main_Toggle_29_in_5 = NULL;
main_Toggle_29_in_6 = NULL;
main_Toggle_29_out_1 = 0;
main_ManageControlPanel_5_in_1 = {"Slab"};
Executive("product version 4 3 2");
$sync
main();
