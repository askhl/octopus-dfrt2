# -*- coding: utf-8 -*-
#
# $Id$
#
# This input file propagates a 2D Gaussian wavepacket through
# transparent boundaries in x- and against rigid ones in y-direction.
# The kinetic energy is calculated by a third order discretization.
# The Q matrices are fully calculated.

ParallelizationStrategy = par_kpoints

%MeshBlockSize
 1 | 1 | 1
%

ExperimentalFeatures = yes

%CalculationMode
 gs      | gs      | td
 "lead_" | "flat_" | "flat_"
 1       | 2       | 3
%

FromScratch = yes

TheoryLevel = independent_particles
Dimensions = 2
BoxShape = parallelepiped
DerivativesOrder = 2
Spacing = 0.25
PoissonSolver = direct2d

TDTimeStep = 0.075
TDMaximumIter = 75
TDPropagator = crank_nicholson_src_mem

%Species
 "flat" | 0 | spec_user_defined | 2.0 | "0"
%

# The lead.
lead_PeriodicDimensions = 1
%lead_Coordinates
 "flat" | 0 | 0
%

Ly = 4
%lead_Lsize
 DerivativesOrder*Spacing | Ly
%
%KPointsGrid 
  2 | 1
-1/2 | 0
%
KPointsUseSymmetries = false

lead_Output = potential
lead_OutputHow = binary


# The central region.
%flat_OpenBoundaries
 lead_dataset     | "lead_"
 lead_restart_dir | "lead_restart"
 lead_static_dir  | "lead_static"
 add_unit_cells   | 0
 td_pot_formula   | "0.0"   | "0.0"
%
%flat_Coordinates
 "flat" | 0 | 0
%
%flat_Lsize
 4 | 4
%

# TD settings.
flat_OnlyUserDefinedInitialStates = yes
kx = 1.75
ky = 1.0
alpha = 0.5
ci = {0, 1}
%flat_UserDefinedStates
 1 | 1 | 1 | formula | "exp(ci*(kx*x + ky*y))*exp(-alpha*(x*x+y*y))"
 1 | 2 | 1 | formula | "exp(-ci*(kx*x + ky*y))*exp(-alpha*(x*x+y*y))"
%

flat_OpenBoundariesAdditionalTerms = mem_term

%flat_CurrentThroughPlane
   0.0 | 0.0 # origin
   0.0 | -1.0 # u
   Spacing # spacing
   -Ly/Spacing | Ly/Spacing # nu | mu
%

Output = density
OutputHow = binary
OutputEvery = 25

TDEnergyUpdateIter = 1

